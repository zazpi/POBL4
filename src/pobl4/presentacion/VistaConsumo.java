/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pobl4.presentacion;

import java.awt.BorderLayout;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.List;
import java.util.Map;
import javax.swing.BorderFactory;
import java.util.Map.Entry;

import javax.swing.DefaultComboBoxModel;
import javax.swing.GroupLayout;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.LayoutStyle;
import javax.swing.WindowConstants;
import javax.swing.border.BevelBorder;
import javax.swing.border.SoftBevelBorder;

import org.jfree.chart.ChartPanel;

import pobl4.dao.ConsumoDAO;
import pobl4.dao.UserDAO;
import pobl4.dominio.Consumo;
import pobl4.negocio.CtrlConsumo;
import pobl4.negocio.CtrlMain;
import pobl4.negocio.GraficoFactory;

/**
 *
 * @author asier
 */
public class VistaConsumo extends javax.swing.JDialog implements ItemListener{
    
    CtrlConsumo controlador;
    List<Consumo> listaConsumos;
    DefaultComboBoxModel<String> model1;
    DefaultComboBoxModel<String> model2;
    DefaultComboBoxModel<String> model3;
    ChartPanel chartPanel;
    /**
     * 
     * @param parent
     * @param modal
     * @param listConsumo
     * @param consumoDAO
     */
    public VistaConsumo(java.awt.Frame parent, boolean modal,List<Consumo> listConsumo,ConsumoDAO consumoDAO,UserDAO userDAO,CtrlMain main) {
        super(parent, modal);
        initComponents();
        this.listaConsumos = listConsumo;
        controlador = new CtrlConsumo(this,listConsumo,consumoDAO,userDAO,main);
        initFiltros();
        addBtListeners();
        this.setLocationRelativeTo(null);
        this.setResizable(true);
        this.setVisible(true);
        
    }

    public List<Consumo> getConsumos(){
    	return listaConsumos;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        JPanel panelNombre = new JPanel();
        JLabel labelNombre = new JLabel();
        JPanel panelArriba = new JPanel();
        btAno = new JButton();
        btHora = new JButton();
        btDia = new JButton();
        btMes = new JButton();
        btAnadir = new JButton();
        JPanel panelDerecha = new JPanel();
        JLabel datosEstadisticos = new JLabel();
        JLabel periodoTiempo1 = new JLabel();
        fechaAno = new JComboBox<>();
        fechaMes = new JComboBox<>();
        JLabel labelConsumo = new JLabel();
        JLabel labelPunta = new JLabel();
        JLabel labelValle = new JLabel();
        JLabel labelMedia = new JLabel();
        consumo = new JLabel();
        punta = new JLabel();
        valle = new JLabel();
        mediaDia = new JLabel();
        JLabel jLabel1 = new JLabel();
        JLabel jLabel2 = new JLabel();
        JLabel jLabel3 = new JLabel();
        fechaDia = new JComboBox<>();
        btCalcular = new JButton();
        jPanel1 = new JPanel();

        setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
        setMinimumSize(new Dimension(905, 565));
        setModal(true);

        panelNombre.setBorder(BorderFactory.createLineBorder(new Color(0, 0, 0), 2));

        labelNombre.setFont(new Font("Ubuntu", 1, 15)); // NOI18N
        labelNombre.setForeground(new Color(16, 103, 218));
        labelNombre.setText("CONSUMO HISTÓRICO");

        GroupLayout panelNombreLayout = new GroupLayout(panelNombre);
        panelNombre.setLayout(panelNombreLayout);
        panelNombreLayout.setHorizontalGroup(panelNombreLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(GroupLayout.Alignment.TRAILING, panelNombreLayout.createSequentialGroup()
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(labelNombre)
                .addGap(510, 510, 510))
        );
        panelNombreLayout.setVerticalGroup(panelNombreLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(panelNombreLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelNombre)
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        panelArriba.setBackground(new Color(190, 191, 190));
        panelArriba.setBorder(BorderFactory.createLineBorder(new Color(0, 0, 0), 2));

        btAno.setFont(new Font("Ubuntu", 1, 15)); // NOI18N
        btAno.setText("Año");
        btAno.setActionCommand("Ano");
        btAno.setBorder(new SoftBevelBorder(BevelBorder.RAISED));

        btHora.setFont(new Font("Ubuntu", 1, 15)); // NOI18N
        btHora.setText("Hora");
        btHora.setBorder(new SoftBevelBorder(BevelBorder.RAISED));

        btDia.setFont(new Font("Ubuntu", 1, 15)); // NOI18N
        btDia.setText("Día");
        btDia.setActionCommand("Dia");
        btDia.setBorder(new SoftBevelBorder(BevelBorder.RAISED));

        btMes.setFont(new Font("Ubuntu", 1, 15)); // NOI18N
        btMes.setText("Mes");
        btMes.setBorder(new SoftBevelBorder(BevelBorder.RAISED));

        btAnadir.setFont(new Font("Ubuntu", 1, 20)); // NOI18N
        btAnadir.setText("+");
        btAnadir.setActionCommand("Anadir");
        btAnadir.setBorder(new SoftBevelBorder(BevelBorder.RAISED));

        GroupLayout panelArribaLayout = new GroupLayout(panelArriba);
        panelArriba.setLayout(panelArribaLayout);
        panelArribaLayout.setHorizontalGroup(panelArribaLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(panelArribaLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(btAno, GroupLayout.PREFERRED_SIZE, 69, GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btMes, GroupLayout.PREFERRED_SIZE, 69, GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btDia, GroupLayout.PREFERRED_SIZE, 69, GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btHora, GroupLayout.PREFERRED_SIZE, 69, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, 759, Short.MAX_VALUE)
                .addComponent(btAnadir, GroupLayout.PREFERRED_SIZE, 33, GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36))
        );
        panelArribaLayout.setVerticalGroup(panelArribaLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(panelArribaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelArribaLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(btHora)
                    .addComponent(btDia)
                    .addComponent(btMes)
                    .addComponent(btAno)
                    .addComponent(btAnadir))
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        panelDerecha.setBackground(new Color(190, 191, 190));
        panelDerecha.setBorder(BorderFactory.createLineBorder(new Color(0, 0, 0), 2));

        datosEstadisticos.setBackground(new Color(1, 1, 1));
        datosEstadisticos.setFont(new Font("Ubuntu", 1, 18)); // NOI18N
        datosEstadisticos.setForeground(new Color(1, 1, 1));
        datosEstadisticos.setText("DATOS ESTADÍSTICOS");

        periodoTiempo1.setBackground(new Color(1, 1, 1));
        periodoTiempo1.setFont(new Font("Ubuntu", 1, 18)); // NOI18N
        periodoTiempo1.setForeground(new Color(1, 1, 1));
        periodoTiempo1.setText("Periodo de tiempo");

        fechaAno.setMaximumRowCount(24);
        fechaAno.setModel(new DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        fechaMes.setMaximumRowCount(24);
        fechaMes.setModel(new DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        labelConsumo.setFont(new Font("Ubuntu", 2, 18)); // NOI18N
        labelConsumo.setForeground(new Color(1, 1, 1));
        labelConsumo.setText("Consumo: ");

        labelPunta.setFont(new Font("Ubuntu", 2, 18)); // NOI18N
        labelPunta.setForeground(new Color(1, 1, 1));
        labelPunta.setText("Periodo Punta: ");

        labelValle.setFont(new Font("Ubuntu", 2, 18)); // NOI18N
        labelValle.setForeground(new Color(1, 1, 1));
        labelValle.setText("Periodo Valle: ");

        labelMedia.setFont(new Font("Ubuntu", 2, 18)); // NOI18N
        labelMedia.setForeground(new Color(1, 1, 1));
        labelMedia.setText("Media por día: ");

        consumo.setFont(new Font("Ubuntu", 0, 18)); // NOI18N
        consumo.setText("0");

        punta.setFont(new Font("Ubuntu", 0, 18)); // NOI18N
        punta.setText("0");

        valle.setFont(new Font("Ubuntu", 0, 18)); // NOI18N
        valle.setText("0");

        mediaDia.setFont(new Font("Ubuntu", 0, 18)); // NOI18N
        mediaDia.setText("0");

        jLabel1.setText("Año");

        jLabel2.setText("Mes");

        jLabel3.setText("Día");

        fechaDia.setMaximumRowCount(24);
        fechaDia.setModel(new DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        btCalcular.setText("Calcular");
        btCalcular.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                btCalcularActionPerformed(evt);
            }
        });

        GroupLayout panelDerechaLayout = new GroupLayout(panelDerecha);
        panelDerecha.setLayout(panelDerechaLayout);
        panelDerechaLayout.setHorizontalGroup(panelDerechaLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(panelDerechaLayout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addComponent(datosEstadisticos)
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(GroupLayout.Alignment.TRAILING, panelDerechaLayout.createSequentialGroup()
                .addContainerGap(34, Short.MAX_VALUE)
                .addGroup(panelDerechaLayout.createParallelGroup(GroupLayout.Alignment.TRAILING)
                    .addGroup(panelDerechaLayout.createParallelGroup(GroupLayout.Alignment.TRAILING, false)
                        .addGroup(GroupLayout.Alignment.LEADING, panelDerechaLayout.createSequentialGroup()
                            .addComponent(labelMedia)
                            .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(mediaDia, GroupLayout.PREFERRED_SIZE, 58, GroupLayout.PREFERRED_SIZE))
                        .addGroup(GroupLayout.Alignment.LEADING, panelDerechaLayout.createSequentialGroup()
                            .addComponent(labelValle)
                            .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(valle, GroupLayout.PREFERRED_SIZE, 58, GroupLayout.PREFERRED_SIZE))
                        .addGroup(GroupLayout.Alignment.LEADING, panelDerechaLayout.createSequentialGroup()
                            .addComponent(labelConsumo)
                            .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(consumo, GroupLayout.PREFERRED_SIZE, 58, GroupLayout.PREFERRED_SIZE))
                        .addGroup(GroupLayout.Alignment.LEADING, panelDerechaLayout.createSequentialGroup()
                            .addComponent(labelPunta)
                            .addGap(42, 42, 42)
                            .addComponent(punta, GroupLayout.PREFERRED_SIZE, 58, GroupLayout.PREFERRED_SIZE)))
                    .addGroup(panelDerechaLayout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(fechaMes, GroupLayout.PREFERRED_SIZE, 186, GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelDerechaLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addGroup(panelDerechaLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                            .addComponent(periodoTiempo1)
                            .addComponent(fechaAno, GroupLayout.PREFERRED_SIZE, 186, GroupLayout.PREFERRED_SIZE)))
                    .addGroup(panelDerechaLayout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(25, 25, 25)
                        .addGroup(panelDerechaLayout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                            .addComponent(btCalcular, GroupLayout.Alignment.TRAILING, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(fechaDia, GroupLayout.Alignment.TRAILING, 0, 186, Short.MAX_VALUE))))
                .addGap(39, 39, 39))
        );
        panelDerechaLayout.setVerticalGroup(panelDerechaLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(panelDerechaLayout.createSequentialGroup()
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(periodoTiempo1)
                .addGap(38, 38, 38)
                .addGroup(panelDerechaLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(fechaAno, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addGroup(panelDerechaLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(fechaMes, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addGroup(panelDerechaLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(fechaDia, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addComponent(btCalcular)
                .addGap(32, 32, 32)
                .addComponent(datosEstadisticos)
                .addGap(36, 36, 36)
                .addGroup(panelDerechaLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(labelConsumo)
                    .addComponent(consumo, GroupLayout.PREFERRED_SIZE, 18, GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(panelDerechaLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(labelPunta)
                    .addComponent(punta, GroupLayout.PREFERRED_SIZE, 18, GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(panelDerechaLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(labelValle)
                    .addComponent(valle, GroupLayout.PREFERRED_SIZE, 18, GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(panelDerechaLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(labelMedia)
                    .addComponent(mediaDia, GroupLayout.PREFERRED_SIZE, 18, GroupLayout.PREFERRED_SIZE))
                .addGap(58, 58, 58))
        );

        jPanel1.setBorder(BorderFactory.createLineBorder(new Color(0, 0, 0), 2));

        GroupLayout jPanel1Layout = new GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        GroupLayout layout = new GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addComponent(panelNombre, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(panelArriba, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelDerecha, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panelNombre, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelArriba, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(panelDerecha, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btCalcularActionPerformed(ActionEvent evt) {//GEN-FIRST:event_btCalcularActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btCalcularActionPerformed

    public void addBtListeners(){
        btAnadir.addActionListener(controlador);
        btAno.addActionListener(controlador);
        btDia.addActionListener(controlador);
        btHora.addActionListener(controlador);
        btMes.addActionListener(controlador);
        fechaAno.addItemListener(this);
        fechaMes.addItemListener(this);
        if(listaConsumos.isEmpty()) return;
        fechaAno.setModel(model1);
        fechaMes.setModel(model2);
        fechaDia.setModel(model3);

        
    }

    public void setGrafico(Map<String, Double> map) {
    	if(chartPanel != null) { 
    		chartPanel.removeAll();
    		jPanel1.remove(chartPanel);}
    	chartPanel = GraficoFactory.getGraficoBarras(map);
    	chartPanel.setSize(jPanel1.getSize());
    	jPanel1.add(chartPanel,BorderLayout.CENTER);
    	this.repaint();
    }
  
    
    public int getAño() {
    	return Integer.valueOf(fechaAno.getSelectedItem().toString());
    }
    public int getMes() {
    	return Integer.valueOf(fechaMes.getSelectedItem().toString());
    }
    public int getDia() {
    	return Integer.valueOf(fechaDia.getSelectedItem().toString());
    }
    
    public void initFiltros() {
    	model1 = new DefaultComboBoxModel<>(getFechasInicio());
    	if(model1.getSelectedItem()== null) return;
    	Object [] params1 = {"ano",Integer.valueOf((String)model1.getSelectedItem())};
    	UpdateFiltros(params1);
    	Object [] params2 = {"mes", Integer.valueOf((String)model2.getSelectedItem())};
    	UpdateFiltros(params2);
    	
    	
    }
    
    public void UpdateFiltros(Object...params) {
    	String periodo = (String)params[0];
    	int periodoReferencia = (int) params[1];
    	
    	System.out.println(periodo+periodoReferencia);
    	if(periodo.equals("ano")) {
    		model2 = new DefaultComboBoxModel<>(getMesesPorAno(periodoReferencia));
    		fechaMes.setModel(model2);
    	}else if(periodo.equals("mes")) {
    		model3 = new DefaultComboBoxModel<>(getDiasPorMes(periodoReferencia));
    		fechaDia.setModel(model3);
    	}
    	
    	this.repaint();
    }
    private String [] getDiasPorMes(int mes) {
    	List<String> fechasFin = new ArrayList<>();
    	for(Consumo c: listaConsumos) {
    		if(c.getMes() == mes && !fechasFin.contains(String.valueOf(c.getDia())))
    			fechasFin.add(String.valueOf(c.getDia()));
    	}
    	
    	Collections.sort(fechasFin, new Comparator<String>() {

			@Override
			public int compare(String o1, String o2) {
				// TODO Auto-generated method stub
				return Integer.valueOf(o1) < Integer.valueOf(o2)?-1:Integer.valueOf(o1) > Integer.valueOf(o2)?1:0;
			}
		});
    	return fechasFin.toArray(new String [0]);
	}

	private String [] getMesesPorAno(int ano) {
    	List<String> fechasFin = new ArrayList<>();
    	for(Consumo c: listaConsumos) {
    		if(c.getAño() == ano && !fechasFin.contains(String.valueOf(c.getMes())))
    			fechasFin.add(String.valueOf(c.getMes()));
    	}
    	
    	Collections.sort(fechasFin, new Comparator<String>() {

			@Override
			public int compare(String o1, String o2) {
				// TODO Auto-generated method stub
				return Integer.valueOf(o1) < Integer.valueOf(o2)?-1:Integer.valueOf(o1) > Integer.valueOf(o2)?1:0;
			}
		});
    	return fechasFin.toArray(new String [0]);
	}

	public String [] getFechasInicio() {
    	List<String> fechasInicio = new ArrayList<>();
    	for(Consumo c: listaConsumos) {
    		if(!fechasInicio.contains(String.valueOf(c.getAño())))
    			fechasInicio.add(String.valueOf(c.getAño()));
    	}
    	Collections.sort(fechasInicio, new Comparator<String>() {

			@Override
			public int compare(String o1, String o2) {
				// TODO Auto-generated method stub
				return Integer.valueOf(o1) < Integer.valueOf(o2)?-1:Integer.valueOf(o1) > Integer.valueOf(o2)?1:0;
			}
		});
    	return fechasInicio.toArray(new String [0]);
    }
	
	public void setEstadisticos(Map<String,Double> datosEstadisticos) {
		consumo.setText(String.valueOf(datosEstadisticos.get("consumoMedio")));
		punta.setText(String.valueOf(datosEstadisticos.get("periodoPunta")));
		valle.setText(String.valueOf(datosEstadisticos.get("periodoValle")));		
	}
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    JButton btAnadir;
    JButton btAno;
    JButton btCalcular;
    JButton btDia;
    JButton btHora;
    JButton btMes;
    JLabel consumo;
    JComboBox<String> fechaAno;
    JComboBox<String> fechaDia;
    JComboBox<String> fechaMes;
    JPanel jPanel1;
    JLabel mediaDia;
    JLabel punta;
    JLabel valle;
    // End of variables declaration//GEN-END:variables
	@Override
	public void itemStateChanged(ItemEvent e) {
		if(e.getStateChange() == e.SELECTED) {
			if(e.getSource() == fechaAno) {
				Object [] params = {"ano", Integer.valueOf((String) model1.getSelectedItem())};
				UpdateFiltros(params);
			}else if(e.getSource() == fechaMes) {
				Object [] params = {"mes", Integer.valueOf((String) model2.getSelectedItem())};
				UpdateFiltros(params);
			}
		}
	}
}
